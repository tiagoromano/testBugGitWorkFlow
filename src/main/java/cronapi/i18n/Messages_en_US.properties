DateFormat=MM/dd/yyyy

DateTimeFormat=MM/dd/yyyy HH:mm:ss

ParseDateFormat=M/d/yyyy

MD5OfFile=MD5 from file

MD5OfVar=MD5 from string

URLAddress=URL address: A complete URL addres. Example: https://www.cronapp.io

XMLGetAttributeDescription=Function that return the attribute value from the element

XMLGetAttributeName=Attribute value

XMLGetAttributeParam0=Element: Element to get que attribute value

XMLGetAttributeParam1=Search object: Attribute to get from element

XMLGetChildElementDescription=Function that return the children element from the element

XMLGetChildElementName=Get children elements

XMLGetChildElementParam0=Search base: Element  base from search

XMLGetChildElementParam1=Element searched: Child element to be searched 

XMLGetChildrenElementDescription=Function that return the children elements from a element

XMLGetElementAsXMLName=Return the element in xml format

XMLGetElementAsXMLNameDescription=Function that return the element in xml format

XMLGetElementAsXMLParam0=XML element: Element to get in xml format

XMLGetElementTagNameDescription=Function that return the element name

XMLGetElementTagNameName=Get the element name

XMLGetElementTagNameParam0=Search target: Element to get the name

XMLGetElementValueDescription=Function that return the element value

XMLGetElementValueName=Element value

XMLGetElementValueParam0=Searched element: Element to get the value

XMLGetParentElementDescription=Function that return the parent element from the element

XMLGetParentElementName=Get parent element

XMLGetParentElementParam0=Children element

XMLOpenDescription=Function that return the xml builded from a name

XMLOpenFromFileDescription=Function that return a xml builted from a File object

XMLOpenFromFileName=Builted from a file

XMLOpenFromFileParam0=XML File path: Absolute file path to build xml 

XMLOpenFromString=Create XML from text

XMLOpenFromStringDescription=Function that create a XML from a text

XMLOpenFromStringParam0= Text

XMLToJSON=Convert XML to JSON

XMLToJSONDescription=Function that convert a xml string into JSON object

XMLOpenName=Build a new URL

XMLOpenParam0=XML Name: Name to create the xml

XMLSetElementAttributeValueDescription=Function that set a content on element

XMLSetElementAttributeValueName=Set attribute value

XMLSetElementValueDescription=Function that set a value on element

XMLSetElementValueName=Set element content

XMLSetElementValueParam0=Search target: Element to set the value

XMLSetElementValueParam1=Content to be setted on element

XpathCompileDescription=Function that return the children elements with same name.

XpathCompileName=Return the children elements with same name.

XpathCompileParam0=Serach Base: Element to search the children elements

XpathCompileParam1=Search target: Child element to search on element

addContent=Add content?

addContentToFile=Add content to file

applicationTemporaryFolder=Temporary folder

applicationFolder=Application folder

applicationRecycleFolder=Application recycle folder

base64ToText=Base64 to text

canReadyFile=Can read file?

canWriteFile=Can you write file?

charset=Charset

clearFile=Clear file

closeFile=Close file

compressToZipDescription=Function that compress a Var to Zip

compressToZipName=Compress a byte array

compressToZipParam0=Compress variable: Var to be compressed

content=Content

contentInAscii=ASCII Content: Content in ascii

contentInBase64=Content: Base64 Content

contentInTextBinary=Content: Binary text content

contentOfFile=File Contents

convertArrayToList=Convert array to list

convertBase64ToBinary=Convert base64 to binary

convertHexadecimalToInt=Convert hexadecimal to integer

convertStringToJs=Convert text to escaping text in javascript

convertToAscii=Convert char to ASCII code

convertToBytes=Conversion to bytes

convertToBytesDescription= Convert a text to bytes[]

convertToBytesParam0= Text

copyFile=Copy file

copyTextToTransferAreaDescription=Function that copy text to transfer area

copyTextToTransferAreaName=Copy text to transfer area

copyTextToTransferAreaParam0=Copy to transfer: Variable to be copy into transfer area

couldNotReadContentsFile=Could not read entire contents of file

createFolder=Create folder

createNewFile=Create new file

decodeZipFromByteDescription=Function that descompress from zip to byte array

decodeZipFromByteName=Descompress a byte array

decodeZipFromByteParam0=descompress variable: Variable to be descompress

destinationFolder=Destination Folder. Complete folder path. Example: /MyFolder/

destinationPath=Destination Path

downloadFileFromUrl=Download file from URL

downloadUrltoFile=Download from an URL to a file

functionDownloadUrltoFile=Download an url to a file passed as a parameter

filePathToSaveURL=File: Full path to the file that will receive the data. If it exists, it will be deleted before downloading.

createDownloadURL=Create Download URL

createDownloadURLDescription=Function to create a download url from a phisical file path

createDownloadURLParam=File: Full file path

file=File

fileExists=Is there a file?

fileExtension=File Extension

folder=Folder

folderPathToSaveFile=Folder to save: A complete folder path to save the file. Example: /MyFolder/

functionConvertBase64ToText=Function to convert base64 to text

functionConvertToLogic=Function to converter to logical

functionToAddContentToFile=Function to add content to file

functionToCheckIfCanReadFile=Function to check if you can read the file

functionToCheckIfCanWriteFile=Function to check if you can write the file

functionToCheckIfExistFile=Function to check if the file exists. Return true if exists, else return false

functionToCheckIsEndOfFile=Function to check if the read of file are in end of file

functionToCheckIsFolder=Function check if it is folder. Return true if a path passed on parameter is a folder, else, return false

functionToClearFile=Function to clean file. This function receive a file and clean, or flush, the content, making a empty file.

functionToCloseFile=Function to close the file. When a file is openned to write, others cannot open the file to write, only read.

functionToConvertArrayToList=Function to convert array to list 

functionToConvertBase64ToBinary=Function to convert base64 to binary

functionToConvertHexadecimalToInt=Function to convert hexadecimal to integer

functionToConvertStringToJs=Function to convert text to escaped text in javascript

functionToConvertTextBinaryToText=Function to binary text to text converter

functionToConvertTextInTextBinary=Function to text to binary text converter

functionToConvertToAscii=Function to convert char to ASCII code

functionToCopyFile=Function to copy the file to source path to destination path

functionToCreateFile=Function to create file

functionToCreateNewFolder=Function to create new folder. Example: /PATH/FOLDER_NAME

functionToDownloadFileFromUrl=Function to download file from URL and save a content in a file

functionToGetMD5OfFile=Function to get MD5 from file

functionToGetParentOfFile=Function to get the parent path. Example: /MyFolder/MyFile.txt return /MyFolder/

functionToGetSizeOfFile=File size: Function to get the total file size. Example: A file with 4906 bytes will return 4096.

functionToGetTotalLinesFile=Function to get the total rows from the file. Example: A text file with five lines will return five.

functionToMoveFile=Function to move file from a fully source path to a fully destination path

functionToOpenFileToRead=Function to open file to reading. This function is used to get a file reference openned to be read.

functionToOpenFileToWrite=Function to open file to writing. This function is used to get a file reference openned to be written, and can add a content in this file.

functionToReadAllContentFileInBytes=Function to read entire contents of the file in bytes and return a byte array with content

functionToReadAllContentOfFile=Function that return a String with all content of readed file.

functionToReadAllFileWithCharset=Function to read entire file by defining charset. Default charset is UTF-8

functionToReadContentOfFile=Function to read file contents with size in bytes indicated at parameter.

functionToReadLineOfFile=Function to read file line, which every line is stored on a variable assigned into "return", and the statements are executed by each line readed. Example: A text file with five lines, the statements will be executed five times.

functionToRemoveFile=Function to remove file, return true if succes, else return false

functionToRemoveFolderFiles=Function to remove files folder

functionToRenameFile=Function to rename file. Example: /MyFolder/OldFile.txt is renamed to /MyFolder/NewFile.txt

functionToReturnApplicationTemporaryFolder=Function to return the path of temporary folder. This folder exists merely when application is being executed, in this way, just save temporary files in this folder.

functionToReturnApplicationFolder=Function to return the path of application folder. This folder is the same folder of project tree, and exists merely to facilitate the use with files.

functionToReturnApplicationRecycleFolder=Function to return the path of application recycle folder. This folder has its files deleted every 10 minutes.

functionToReturnMD5OfFile=Function to return the MD5 from a file

functionToReturnMD5OfVar=Function do return MD5 from a string or byte array

functionToUnZipFile=Function to unzip file

getMD5OfFile=Get MD5 from file

getParentOfFile=Get above directory path

isEndOfFile=Is it end of file?

isFile=Is it file?

isFolder=Is it folder?

moveFile=Move File

nameOfFile=Filename

newNameOfFile=New name: New file name

openFileToRead=Open file to reading

openFileToWrite=Open file to writing

parameterNotBinary=Parameter is not binary

pathMustBeCreatedForFolder=Folder path: Path to create folder. Example: TEMP_FOLDER/

pathOfDestinationFile=Destination path: Fully File destination path. Example: /MyFolder/MyFile.txt

pathOfFile=Path of the file: Example: TEMPORARY_FOLDER/myFile.txt

MD5OfVarParam0=String or bytes

pathOfFolder=Folder path: Example TEMPORARY_FOLDER/myFolderName

pathOfSourceFile=Destination: Fully File source path. Example: /MyFolder/MyFile.txt

randomDescription=Function that return a random positive integer with maximum value defined by parameter

randomName=Randomize number

randomParam0=Max value: Variable that define the maximum value to function

readAllContentFileInBytes=Read all file contents in bytes

readAllContentOfFile=Read all file contents

readAllFileWithCharset=Read entire file by setting charset

readContentOfFile=Read file contents

readLineOfFile=Read file line

removeFile=Remove file

removeFolderFiles=Remove files folder

renameFile=Rename file

shellExecuteDescription=Function that execute a command line and return error (if exists)

shellExecuteName=Execute a command line

shellExecuteParam0=Variable executed

shellExecuteParam1=Error detect: Variable that defines if errors will be returned

size=Size

sizeOfFile=File size

sourceFile=Source file

sourcePath=Source path: Full path to source file. Example: /MyFolder/myFile.txt

streamOfFile=Open file to writing or reading: Return of the "Open file to read/write"

streamOfFileToRead=Open file to read: Return from "Open file to read"

streamOfFileToWrite=Open file to writing: Return of the function "Open file to writing"

textBinaryToText=Binary text to text

textToTextBinary=Text to binary text

toLogic=to logic 

totalLinesFile=Total lines file

unZipFile=Unzip file

convertStringToDate=Convert text to date

convertStringToDateWithTimeZone=Convert text to date with Time Zone

functionToConvertStringToDate=Function to convert text to data

mask=Mask

maskFormat=Mask: Mask. Ex: dd/MM/yyyy HH:mm:ss, DateTimeFormat, DateFormat

timezone=Time Zone

timezoneFormat=Time Zone: Time Zone. Ex: -3, GMT-03:00 or America/Sao_Paulo

minSize=Minimum size

convertDecToHex=Convert to hexadecimal

functionToConvertDecToHex=Function to convert decimal to hexadecimal

convertToLong=Convert to long

functionToConvertToLong=Function to convert to long

convertToString=Convert to text

functionToConvertToString=Function to convert to text

getMinuteFromDate=Get date minute

functionToGetMinuteFromDate=Function to get minute of date

date=Date

getSecondFromDate=Get date second

functionToGetSecondFromDate=Function to get date second

getHourFromDate=Get date time

functionToGetHourFromDate=Function to get date time

getYearFromDate=Get date year

functionToGetYearFromDate=Function to get date year

getMonthFromDate=Get date month

functionToGetMonthFromDate=Function to get date month

getDayFromDate=Get date day

functionToGetDayFromDate=Function to get date day

getMonthsBetweenDates=Get total of months between dates

functionToGetMonthsBetweenDates=Function to get total of months between dates

largerDateToBeSubtracted=Biggest date: Larger date to be subtracted

smallerDateToBeSubtracted=Minor date: Minor date to be subtracted

getYearsBetweenDates=Get total of years between dates

functionToGetYearsBetweenDates=Function to get total of years between dates

incDay=Increase day on date

functionToIncDay=Function to increment day on date

daysToIncrement=Days to increase

incMonth=Increase month on date

functionToIncMonth=Function to increment month on date

monthsToIncrement=Months to increase

incYear=Increase year on date

functionToIncYear=Function to increase data

yearsToIncrement=Years an increment

getNow=Get current date and time

getNowNoHour=Get current date with no hours

functionToGetNow=Function to get current date and time

functionToGetNowNoHour=Function to get current date with no hour

getDaysBetweenDates=Get days total between dates

functionToGetDaysBetweenDates=Function to get total days between dates

formatDateTime=Format date

formatDateTimeWithTimeZone=Format date with timezone

functionToFormatDateTime=Function to format date

getDayOfWeek=Get day of week from date

functionToGetDayOfWeek=Function to get day of week from date

getLastDayFromMonth=Get last day from month

functionToGetLastDayFromMonth=Function to get last day from month

month=Month

year=Year

newDate=New date

functionToNewDate=Function to create new date

day=Day

hour=Hour

minute=Minute

second=Second

createRecipientsAddress=Create Recipients

functionToCreateRecipientsAddress=Function to create recipients, if you need to pass more than 1 email, it is necessary to separate by comma (,)

forRecipient=to recipient (to)

copyToRecipient=Copy: Copy to recipient (cc)

hiddenCopyToRecipient=Blind carbon copy: Copy hidden to recipient (bcc)

sendEmailSmtp=Send mail using SMTP

functionToSendEmailSmtp=Function to send mail using SMTP

hostAddress=Server address

hostPort=Server port

protocolToSendEmail=Sending protocol: Protocol to sending e-mail (TLS, SSL or none)

login=Login

password=Password

senderMail=Sender email

toRecipientMail=Recipient: Email of recipient (return function to create destinations or comma-separated)

subject=Subject

isHtml=Is it html?

attachments=Attachments

sendEmailSmtpWithDigitalCertificate=Send mail using SMTP and digital certificate

functionToSendEmailSmtpWithDigitalCertificate=Function to send mail using SMTP and digital certificate

keyJks=Certificate key: Digital certificate key

keyJksPassword=Key password: Digital certificate key password

sleep=Sleep

functionToSleep=Function to make the sleeping process

timeSleepInSecond=Waiting time: Number of seconds the process should sleep

throwException=Exception raise

functionToThrowException=Exception handling function

createExceptionName=Create a exception

createExceptionDescription=Function that create a exception

createExceptionParam0=Message:Message of exception

exceptionToBeThrow=Thrown exception: Exception to be raised (Object of the exception or description itself)

loginPasswordInvalid=Login or password invalid

openFTPConnection=Open FTP connection

functionToOpenFTPConnection=Function to open FTP connection

closeFTPConnection=Close FTP connection

functionToCloseFTPConnection=Function to close FTP connection

ftpConnectionObj=FTP connection returned: FTP connection returned from "Open FTP connection"

ftpServerRefusedConnection=FTP server refused connection

setPassiveModeFTP=Set FTP connection to passive mode

functionToSetPassiveModeFTP=Function to set FTP connection to passive mode

sendFTPCommand=Send FTP command

functionToSendFTPCommand=Function to send FTP command

commandFtp=FTP command

getCurrentWorkingDirectoryFTP=Get current working directory FTP

functionToGetCurrentWorkingDirectoryFTP=Function to get current working directory FTP

listFTPFiles=List files from FTP

functionToListFTPFiles=Function to list files from FTP

withDetail=With details?

listFTPFilesFromFolder=List files in the FTP folder

functionToListFTPFilesFromFolder=Function to list files in the FTP folder

changeFTPFolder=Change FTP folder

functionToChangeFTPFolder=Function to change FTP folder

changeToParentFTPFolder=Change to parent FTP folder

functionToChangeToParentFTPFolder=Function to change to parent FTP folder

deleteFTPFolder=Delete FTP folder

functionToDeleteFTPFolder=Function to delete FTP folder

deleteFTPFile=Delete FTP file

functionToDeleteFTPFile=Function to delete FTP file

createNewFTPFolder=Create new FTP folder

functionToCreateNewFTPFolder=Function to create new FTP folder

uploadFileToFTP=Upload file to FTP

functionToUploadFileToFTP=Function to upload file to FTP

pathOfFolderFTP=FTP path: Folder path FTP

isBinaryFile=Binary file?

downloadFileFromFTP=Download file from FTP

functionToDownloadFileFromFTP=Function to download file from FTP

saveFileInPath=Save path: Save file in path

fileToDownloadFTPPath=FTP download path:FTP download path file

errorDownloadFile=Error downloading file

name=Name

description=Description

params= Parameters: Parameters to be passed
return=Return

ObjectType.BOOLEAN=Boolean

ObjectType.LONG=Long

ObjectType.DOUBLE=Double

ObjectType.DATETIME=DateTime

ObjectType.STRING=String

ObjectType.LIST=List

ObjectType.MAP=Map

ObjectType.DATASET=DataSet

ObjectType.JSON=Json

ObjectType.XML=Xml

ObjectType.OBJECT=Object

ObjectType.UNKNOWN=Unknown

ObjectType.VOID=Void

TextOperationsName=Constructor to class that manager texts

TextOperationsDescription=Class responsible to managing texts

appendName=Concatenate string

appendDescription=Function that concatenate strings and return a concatenated string

appendParam0=String to concat

appendParam1= Strings to concatenate

XMLSetElementAttributeValueParam0= Element

XMLSetElementAttributeValueParam1= Insert attribute

XMLSetElementAttributeValueParam2= Value to insert

callBlockly= Call blockly

functionToCallBlockly= Function to call a blocky

classNameWithMethod= Block: Block name

addLongName=Return the values added

addLongDescription=Function that returns the values added from params

addLongParam0=Variables to add: Long values to add

addDoubleName=Return the values added

addDoubleDescription=Function that returns the value added from params

addDoubleParam0=Variables to add: Long values to add

subtractLongName=Return the values subtracted

subtractLongDescription=Function that return the subtracted value from other values on first value

subtractLongParam0=Variables to subtracted

subtractDoubleName=Return the values subtracted

subtractDoubleDescription=Function that return the subtracted value from other values on first value

subtractDoubleParam0=Variables to subtracted

multiplyLongName=Return the values multiplied

multiplyLongDescription=Function that return the multiplied value from params

multiplyLongParam0=Variables to multiply

multiplyDoubleName=Return the values multiplied

multiplyDoubleDescription=Function that return the multiplied value from params

multiplyDoubleParam0=Variables to multiply

multiplyFunctionName=Return the values multiplied

multiplyFunctionDescription=Function that return the multiplied value from params

multiplyFunctionParam0=Variables to multiply

subtractFunctionName=Return the values subtracted

subtractFunctionDescription=Function that return the subtracted value from other values on first value

subtractFunctionParam0=Variables to subtracted

addFunctionName=Return the values added

addFunctionDescription=Function that returns the value added from params

addFunctionParam0=Variables to add

datasourceQuery=Open query database

functionToQueryInDatasource=Function to retrieve data from database

entity=Entity

query=Query

paramsQueryTuples=Query params

datasourceHasData=Has data

functionToMoveCursorToNextPosition=Function that moves cursor to next position

datasource=Datasource

datasourceNext=Next

functionToVerifyDataInCurrentPosition=Function that checks data in current position

datasourceClose=Close datasource

functionToCloseAndCleanDatasource=Function that clean all data to free up allocated memory

datasourceUpdateField=Update field

functionToUpdateFieldInDatasource=Function that update field in current data

fieldName=Field name

fieldValue=Field value

datasourceInsert=Insert

functionToInsertObjectInDatasource=Function that insert a new data in database

paramsInsertTuples=Insert´s params

datasourceGetField=Get field

functionToGetFieldOfCurrentCursorInDatasource=Function that retrieve the field of current data

datasourceRemove=Remove

functionToRemoveObjectInDatasource=Function that removes current data from database

absFunctionName=Return the absolute value

absFunctionDescription=Function that return the absolute value

absFunctionParam0=Value to be calculate: Value base to be calculate the absolute value

rootFunctionName=Return the square root value

rootFunctionDescription=Function that return the square root value

rootFunctionParam0=Value to be calculate: Value Base to be calculate the square root value

logFunctionName=Return the logarithm value

logFunctionDescription=Function that return the logarithmic value

logFunctionParam0=Value to be calculate: Value base to be calculate the logarithmic value

log10FunctionName=Return the logarithm value in base 10

log10FunctionDescription=Function that return the logarithmic value in base 10

log10FunctionParam0=Value to be calculate: Value base to be calculate the logarithmic value in base 10

expFunctionName=Return the logarithm value in base 10

expFunctionDescription=Function that return the logarithmic value in base 10

expFunctionParam0=Value to be calculate: Value base to be calculate the logarithmic value in base 10

powFunctionName=Return the value of first parameter raised to second parameter

powFunctionDescription=Function that return the value of first parameter raised to second parameter

powFunctionParam0=Value base: Value base to be calculate the exponencial

powFunctionParam1=Value to be raised: Value to be raised from first parameter

roundFunctionName=Return the round value

roundFunctionDescription=Function that return the round value

roundFunctionParam0=Value to round: Value base to round

ceilFunctionName=Return the smallest round value

ceilFunctionDescription=Function that return the smallest round value

ceilFunctionParam0=Value to round: Value base to round down

floorFunctionName=Return the larger round value

floorFunctionDescription=Function that return the larger round value

floorFunctionParam0=Value to round: Value base to round up

sinFunctionName=Return the sine value

sinFunctionDescription=Function that return the sine value

sinFunctionParam0=Value to calculate: Value base to calculate the sine

cosFunctionName=Return the cosine value

cosFunctionDescription=Function that return the cosine value

cosFunctionParam0=Value to calculate: Value base to calculate the cosine

tanFunctionName=Return the tangent value

tanFunctionDescription=Function that return the tangent value

tanFunctionParam0=Value to calculate: Value base to calculate the tangent

asinFunctionName=Return the arcsine value

asinFunctionDescription=Function that return the arcsine value

asinFunctionParam0=Value to calculate: Value base to calculate the arcsine

acosFunctionName=Return the arc cosine value

acosFunctionDescription=Function that return the arc cosine value

acosFunctionParam0=Value to calculate: Value base to calculate the arc cosine. Value should be between 0.0 and 1.0

atanFunctionName=Return the arc tangent value

atanFunctionDescription=Function that return the arc tangent value

atanFunctionParam0=Value to calculate: Value base to calculate the arc tangent

PIFunctionName=Return the PI value

PIFunctionDescription=Function that return the PI value in double

NotModifiable=Value cannot be modified

negFunctionName=Return the value be multiplied by -1

negFunctionDescription=Function that return the value be multiplied by -1

negFunctionParam0=Value to invert: Value base to be multiplied by -1

infinityFunctionName=Return the infinite positive value

infinityFunctionDescription=Function that return the infinite positive value

MathEFunctionName=Return the constant E

MathEFunctionDescription=Function that return the constant E

goldenRatioFunctionName=Return the the golden ratio constant

goldenRatioFunctionDescription=Function that return the golden ratio constant

isEvenFunctionName=Return true if is a even number, else return false

isEvenFunctionDescription=Function that return true if is a even number, else return false

isEvenFunctionParam0=Value to check: Value to check if is a even number

isOddFunctionName=Return true if is a odd number, else return false

isOddFunctionDescription=Function that return true if is a odd number, else return false

isOddFunctionParam0=Value to check: Value to check if is a odd number

isPrimeFunctionName=Return true if is a prime number, else return false

isPrimeFunctionDescription=Function that return true if is a prime number, else return false

isPrimeFunctionParam0=Value to check: Value to check if is a prime number

isIntFunctionName=Return true if is a integer number, else return false

isIntFunctionDescription=Function that return true if is a integer number, else return false

isIntFunctionParam0=Value to check: Value to check if is a integer number

isPositiveFunctionName=Return true if is a positive number, else return false

isPositiveFunctionDescription=Function that return true if is a positive number, else return false

isPositiveFunctionParam0=Value to check: Value to check if is a positive number

isNegativeFunctionName=Return true if is a negative number, else return false

isNegativeFunctionDescription=Function that return true if is a negative number, else return false

isNegativeFunctionParam0=Value to check: Value to check if is a negative number

isDivisibleByFunctionName=Return true if a the there is not rest of division from first parameter on second parameter

isDivisibleByFunctionDescription=Function that return true if a the there is not rest of division from first parameter on second parameter

isDivisibleByFunctionParam0=Dividend

isDivisibleByFunctionParam1=Divider

XMLHasRootElementName=Has root element?

XMLHasRootElementDescription=Function that verify if exists a root element on XML document

XMLHasRootElementParam0=XML Document: XML Document created by function Create XML

XMLGetRootElementName=Get root element

XMLGetRootElementDescription=Function that receive a XML document or a XML element and return the root element.

XMLGetRootElementParam0=XML Document: XML Document or XML Element to get the root element

convertToDouble=Convert to Double

functionToConvertToDouble=Function that convert the content to a Double value

XMLDocumentToStringName=Get XML in text format

XMLDocumentToStringDescription=Function that receive a XML and return converted to text

XMLDocumentToStringParam0=XML

CategoryType.IO=IO
CategoryType.DATABASE=Database
CategoryType.FRONTEND=Frontend
CategoryType.CONVERSION=Conversion
CategoryType.CHART=Chart
CategoryType.SOCIAL=Social
CategoryType.DATETIME=Datetime
CategoryType.XML=XML
CategoryType.EMAIL=Email
CategoryType.FTP=FTP
CategoryType.JSON=Json
CategoryType.LOGIC=Logic
CategoryType.TEXT=Text
CategoryType.LIST=Lists
CategoryType.MAP=Maps
CategoryType.COLOR=Color
CategoryType.LOOP=Loops
CategoryType.MATH=Math
CategoryType.GRID=Grid
CategoryType.PRINT=Print
CategoryType.OTHER=Other
CategoryType.SEMAPHORE=Semaphore
CategoryType.UTIL=Utils
CategoryType.TREE=Tree
CategoryType.JSONORMAP=Json and Map
CategoryType.SCREEN=Form
CategoryType.OBJECT=Object
functionToExecuteQuery=Function excute query JPQL 
DATASOURCE_INVALID_QUERY=JPQL instruction was invalid: {0}
accessDenied=Access Denied
methodNotFound=Function not found
blocklyNotFound=Blockly not found
sendEmailName=Send e-mail
sendEmailDescription=Function that send a e-mail
sendEmailParam0=From
sendEmailParam1=To: Can receive a single text or a text list
sendEmailParam2=Copy to: Can receive a single text or a text list
sendEmailParam3=Blind Copy to :Can receive a single text or a text list
sendEmailParam4=Subject
sendEmailParam5=Message
sendEmailParam6=HTML content:Send a message with the HTML content
sendEmailParam7=Attachment(s): Absolute path of attachment, or a list with absolute paths
sendEmailParam8=SMTP Host
sendEmailParam9=SMTP Port
sendEmailParam10=Login: Login to autenticate on SMTP host
sendEmailParam11=Password: Password to autenticate on SMTP host
getCountTotalElementsName=Number of records
getCountTotalElementsDescription=Function that get the number of records from datasource with applied filters
createObjectJson=Create Json object
functionToCreateObjectJson=Function to create Json object
createObjectMap=Create Map Object
functionToCreateObjectMap=Function to create Map object
getJsonOrMapField=Get Json field
functionToGetJsonOrMapField=Function to get Json field
mapOrJsonVar=Json
pathKey=Path to go: Example: state[3].uf
valueToBetSet=Value to be set in the object
setJsonOrMapField=Set value in Json
functionToSetJsonOrMapField=Function to set value in Json
addText=Text: Text to be added. Example: "TextToBeAddedIntoFile".
toJson=to Json
functionToJson=Function to convert Text or File to Json
valueToBeRead=Value to be read: Text or File (Return from the "Open file to read" function)
toMap=to Map
functionToMap=Function to convert Text or File to Map
toList=to List
functionToList=Function to convert Text or File to List
createObjectWithMapName=Create a map object
createObjectWithMapDescription=Function that create a map object
createObjectWithMapParam0=Values: Variables to append on creation object
createObjectMapName=Create map object
createObjectMapDescription=Function that create a map object
getMapFieldName=Get map field by path
getMapFieldDescription=Function to get a map field by a path
getMapFieldParam0=Map
getMapFieldParam1=Path to move: Example: state[3].uf
setMapFieldName= Set field on map
setMapFieldDescription=Function to set a field map
setMapFieldParam0=Map
setMapFieldParam1=Path to move: Example: state[3].uf
setMapFieldParam2=Value to be setted on object
callBlocklyNoReturnName=Call block no return
callBlocklyNoReturnDescription=Function that call a block without return
callBlocklyNoReturnParam0=Block name
callBlocklyNoReturnParam1=Parameters
getValueOfFieldName=Get field value
getValueOfFieldDescription=Function that get field value
getValueOfFieldParam0=Field
callClienteFunctionName=Call cliente function
callClienteFunctionDescription=Function that invoke a command on client side application
callClienteFunctionParam0=Command: Comand to be invoked on client
callClienteFunctionParam1=Parameters: Parameters to be attached on function call
errorNotSpecified=Error not specified
isNullName=is null?
isNullDescription=Function that check if a variable is null.
isNullParam0=Variable: Variable to be checked;
isNullOrEmptyName=is null or empty?
isNullOrEmptyDescription=Function that check if a variable is null or empty.
isNullOrEmptyParam0=Variable: Variable to be checked;
isEmptyName=is empty?
isEmptyDescription=Function that check if a variable is empty.
isEmptyParam0=Variable: Variable to be checked;
queryNotFound=Query not allowed
verbNotAllowed=Operation %s not allowed
notAllowed=Not authorized
sendEmailParam12=Protocol:Protocol for sending email through SMTP.
primaryKeyError=Error while {0}, make sure item is not duplicate
foreignKeyError=Error while {0}, make sure item is not being used elsewhere
errorPOSTType=including
errorDELETEType=removing
errorPUTType=updating
getObjectFieldName=Get field on
getObjectFieldDescription=Function to get a field object
getObjectFieldParam0=Map
getObjectFieldParam1=Path to move: Example: state[3].uf
setObjectFieldName= Set field on 
setObjectFieldDescription=Function to set a field object
setObjectFieldParam0=Object
setObjectFieldParam1=Path to move: Example: state[3].uf
setObjectFieldParam2=Value to be setted on object
listFilesName= Get file list
listFilesDescription= Function that list files from a path
listFilesParam0= File path: File path to list files. Example: /MyFolder/MyFile.txt or /MyFolder/
listFilesParam1= Type: Type to list files. All: List files and directories. Directory: List only the directories. Files: List only files, without directories.
folderName=Folder name: Example: MyFolder
fileSeparatorName=File separator
fileSeparatorDescription=Function that return a file separator according to operation system. Example: '/'
all=All
files=File
directories=Folder
XMLElementToStringName=Get element in text format
XMLElementToStringDescription=Function that convert a XML element to text
XMLElementToStringParam0=Element: XML element to be converted
newXMLEmptyName=Create XML
newXMLEmptyDescription=Function that create a XML
newXMLEmptyParam0=Root element: Root element to append in XML
XMLcreateElementName=Create a XML element
XMLcreateElementDescription=Function that create a XML element
XMLcreateElementParam0=Element name
XMLcreateElementParam1=Content: Optional content to element
XMLaddElementName=Add XML element
XMLaddElementDescriptioon=Function that add a XML element on XML parent
XMLaddElementParam0=Parent element
XMLaddElementParam1=Element to add
XMLRemoveElementName=Remove element
XMLRemoveElementDescription=Function that remove a element. Return true if success and else return false.
XMLRemoveElementParam0=Parent element: Element to search the element.
XMLRemoveElementParam1=Element to remove: Name or element object. If empty, remove all childrens.
XMLChangeNodeNameName=Rename element
XMLChangeNodeNameDescription=Function that rename an element
XMLChangeNodeNameParam0=Element: Element object to rename
XMLChangeNodeNameParam1=Name: Element name
encryptPasswordName=Encrypt password
encryptPasswordDescription=Function that receive a password and encrypt using BCryptPasswordEncoder
encryptPasswordParam0=Password:Password to be encrypted
matchesencryptPasswordName=Verify encrypted password
matchesencryptPasswordDescription=Function that verify a decrypted password with a crypted password
matchesencryptPasswordParam0=Decrypted password
matchesencryptPasswordParam1=Encrypted password
XMLaddElementDescription=Function that add a XML element inside a parent element
getURLFromOthersName=Get URL content
getURLFromOthersDescription=Function that do a request into a URL and get the content result
HTTPMethod=Request method
HTTPGet=GET
HTTPPut=PUT
HTTPPost=POST
HTTPDelete=DELETE
contentType=Content type
x_www_form_urlencoded=x_www_form_urlencoded
app_json=JSON
cookieContainer=Headers: Map who will be added on headers. Example: Token.
paramsHTTP=Parameters: Paramters to be passed, if URL_ENCODED, pass a map, if JSON, pass JSON
postData=Data to post: Data to be passed in requisition,  if URL_ENCODED, pass a map, if JSON, pass JSON
readBytesFromStreamName=Read file content in bytes
readBytesFromStreamDescription=Function that read a file content in bytes, each read is stored in variable assigned in "Return", and the statements are executed in each read. Example: A file with 4096 bytes with a read size of 1024 bytes will be readed four times.
readBytesFromStreamParam0=Openned file to read: Return of function "Open file to read"
readBytesFromStreamParam1=Size: Size of bytes to be readed, default value is 1025 bytes
callBackStatements=Commands: Commands to be executed in each read
sizeInBytes=Size in bytes to read from a openned file
nameOfFileFromURL=Filename: Filename from a file without extenstion. Example: MyFile
fileExtensionWithDot=File extenstion: File extension with dot. Example: .html or .txt or .extension
TextToBase64Name=Texto to Base64
TextToBase64Description=Function that convert a text to a Base64 format
TextToConvert=Text: Text to be converted
getHeadersFromExternalURL=Get URL headers
getHeadersFromExternalURLDescription=Function that do a request into a URL and get the headers result
getFromSession=Get value in session
getFromSessionDescription=Function that get value from session by name
setInSession=Add or set value in session
setInSessionDescription=Put or set value in session by name
generateUUIDName= Generate universal identifier
generateUUIDDescription=Function that generate an universal identifier (UUID) and return as String
update=Update
functionToUpdateObjectInDatasource=Function that update a new data in database
functionToRemoveObject=Function that removes data from database
functionToDatasourceGetActiveData=Function to get object from data source
datasourceGetActiveData=Get object from data source
newObject=Create new object
newObjectDescription=Function that create new object 
newEntity=Create new Entity
newEntityDescription=Function that create new entity 
object=Object
parameter=Parameter
getCurrentUserName=Get current user name
getCurrentUserNameDescription=Function that get current user name
executeAsync=Executing asynchronous 
executeAsyncDescription=Function to execute asynchronous commands.
cmd=Command
scheduleExecution=Schedule execution
scheduleExecutionDescription=Function to schedule execution of a routine.
initialTime=Initial time
updateTime=Time to upgrade
timeUnit=Time Unit
MILLISECONDS=Milliseconds
MINUTES=Minutes
HOURS=Hours
SECONDS=Seconds
fileDownloadName=Start file download
fileDownloadDescription=Function that opens the process of downloading the parameter file to the user
fileDownloadParam0=File: File that will be downloaded
fileDownloadParam1=Name: Name to give to the file to be downloaded
MapToList=Map to list
JSONtoList=JSON to list
MapToJson=Map to JSON
generateReport=Generate report
generateReportDescription=Function to generate report file in the desired folder.
report=Report
path=Path
uploadName=Upload
uploadDescription=Function that upload files to server
uploadParam=Description: Upload window description
uploadParam0=Filters: Allowed type files. Ex: image/*
uploadParam1=Maximum size: File maximum size (bytes), defalut is 20MB. Example: 20MB
uploadParam2=Multiples: Allow multiple files?
uploadParam3=After upload: Statements to be executed after an upload
yes=Yes
no=No
incHour=Increase hour on date
functionToIncHour=Function to increment hour on date
hoursToIncrement=Hours to increase
incMinute=Increase minute on date
functionToIncMinute=Function to increment minute on date
minutesToIncrement=Minutes to increase
incSecond=Increase second on date
functionToIncSecond=Function to increment second on date
secondsToIncrement=Seconds to increase
getHoursBetweenDates=Get hours total between dates
functionToGetHoursBetweenDates=Function to get total hours between dates
getMinutesBetweenDates=Get minutes total between dates
functionToGetMinutesBetweenDates=Function to get total minutes between dates
getSecondsBetweenDates=Get seconds total between dates
functionToGetSecondsBetweenDates=Function to get total seconds between dates
getMapFieldNames=Get map field by Key
getMapFieldDescriptions=Function to get a map field by a map key
getMapFieldParams1=Key: Key to search in Map
setMapFieldByKeyName= Set a value on map by key
setMapFieldByKeyDescription=Function that define a field value on map by a key
setMapFieldByKeyParam0=Map
setMapFieldByKeyParam1=Key: Key to search on map. Example: mykey
setMapFieldByKeyParam2=Value: Value to be defined in map
datasourceExecuteQuery=Open query datasource JPQL
datasourceExecuteJQPLQuery=Execute query JPQL
setReturn=Return
redirect=Redirect
redirectDescription=Function to redirect to location
location=Location
setReturnDescription=Function to include a "return" in the code.
firebaseSendRawNotification= Send Raw notification
firebaseSendRawNotificationDescription= Function that send a raw notification.
firebaseSendNotification=Send notification
firebaseSendNotificationDescription=Function that sends notification to a mobile device using FCM (Firebase Cloud Message).
FirebaseServerKey=Server Key
FirebaseTo=Addressee
FirebaseTitle=Title
FirebaseBody=Body : A Json object for send on body.
FirebaseSubtitle=Subtitle
datasourceGetColumnName=Get data column
datasourceGetColumnDescription=Function to get a data column. Example: A list of all e-mails from users
createSerieName=Create serie
createSerieDescription=Function that create a chart serie
createSerieParamName=Serie name
createSerieParamData=Data: Serie data
createSerieParamOptions=Options: Serie Options
createChartName=Create chart
createChartDescription=Function that create a chart
createChartOptions: Options=Chart options
createChartId=Id: Chart id (canvas)
createChartType=Chart type: Chart type to be created
createChartSeries=Chart serie(s): Set of chart series
createChartLegends=Legends: Chart legends
polarArea=Polar Area
firebaseRegister= Register token(s) on topic
firebaseRegisterDescription=Function that register a token(ns) on topic. Could receive a single token or a list of tokens.
firebaseServerKey=Firebase server key
firebaseTopicName=Topic name: Topic name. Example: 'chat'
firebaseToken= Token(s): Token(ns) to be added on topic. Could be a single token os a list of tokens.
getNowInMilliseconds=Get current date and time in milliseconds 
getNowInMillisecondsDescription=Function that get a current date and time in milliseconds
addressOfTheServerBlockDocumentation=http://cronapi-docs.readthedocs.io/pt/develop/cronapi.io/server/${nameMethod}.html
CategoryType.AUTHENTICATION=Authentication
getUserRoles= Get user roles.
getUserRolesDescription= Function that list all roles.
deleteObjectFromJson=Remove Json value
deleteObjectFromJsonDescription= Function that remove a Json value. Example: Remove 'a'. Before: {a:5,b:3}. After: {b:3}.
formatDouble=Format Double
functionformatDouble=Function that format a double. Mask example: 0.0000
startDownload=Start download
startDownloadDescription=Function to start downloading a file, or array of bytes
startDownloadParam0=File/Path/Bytes: Data to be downloaded
startDownloadParam1=Name: Name that the download file should receive
FirebaseData=Data
getParam=Get param from request
getParamDescription=Function to get param from request
applicationClassesFolder=Application classes folder
applicationClassesFolderDescription=Function to return the path of the application classes folder.
commitTransaction=Commit Transaction
commitTransactionDescription=Function to commit transaction.
rollbackTransaction=Rollback Transaction
rollbackTransactionDescription=Function to rollback transaction.
flushTransaction=Flush Transaction
flushTransactionDescription=Function to flush transaction.
beginTransaction=Begin Transaction
beginTransactionDescription=Function to begin transaction.
convertLongToDate=Convert milliseconds to date
convertLongToDateDescription=Function that convert a milliseconds(Long) to date
getSystemParam=Get System Parameter
getSystemParamKey=Parameter Key
getSystemProfile=Get System Profile
updateDate=Update date
functionToUpdateDate=Function to update an date
millisecond=Millisecond

JSONToXML=Convert JSON to XML
JSONToXMLDescription=Function that convert a xml string into JSON object
JSONTOXMLValueToBeRead=Value to be read: Text or File (Return from the "Open file to read" function)

MATHTHEPOW=Function Pow
MATHPOWDESCRIPTION=A number representing the given base taken to the power of the given exponent.
MATHPOWBASE=Base
MATHPOWEXPONENT=Exponent
newline=Newline
newlineDescription=Function that returns a newline '\\n'
attribute=Attribute
value=Value
log=Log
logDescription=Logs application messages according to configuration. By default, logs into console output.
logCategory=Category: Reference key of this log message. This is usually the name of the block.
logLevel=Log Level: This is the log level that will be logged. If it is below the settings, the system will not log in.
INFO=Info
FINE=Fine
FINER=Finer
FINEST=Finest
SEVERE=Severe
WARNING=Warning
CONFIG=Config
logMessage=Log Message: Text You Want to Log.
logDetail=Log Detail: Can be a text or an exception object (error).
audit=Log Audit
auditType=Type: Audit Type. Ex: Blockly Name
auditCommand=Command: Excuted Command. Ex: CreateOrder
auditCategory=Category: Audit category. Ex: Trace, Blockly, Entity, Query etc
auditData=Data: Audit Data. Ex: object, text etc
textReplaceFunction=Replace
textReplaceDescription=Replaced the past text
textReplace=Original text
textReplaceTarget=Text to be replaced
textReplaceReplacement=New Text
textReplaceAllFunction=Replace all
textReplaceAllDescription=Overwriting all past texts
textReplaceRegex=A RegExp or Text
textReplaceFirstFunction=Replace First
textReplaceFirstDescription=Replaces an initial occurrence you find
STRING=String
BOOLEAN=Boolean
LONG=Long
INTEGER=Integer
DOUBLE=Numéric
DATETIME=Date and Time
TIME=Time
TEXTTIME=Text Time
DATE=Date
ISODATE=ISO date
MAP=Map
JSON=Json
LIST=Lista
BYTEARRAY=Bytes
convert=Convert
convertValue=value
convertTo=to
convertDescription=Converts values between different types
zipFile=Zip file
functionToZipFile=Function to zip file
fileList=File list
fileNameToZip=Zip file 
optimisticLockingError=Cannot be updated because it has changed or been deleted since it was last read. Please, input the correct version and try again.
generateKeys=Generate Keys
generateKeysDescription=Generates public and private keys
fileUrl=File Url
loadPrivateKey=Load private key
loadPrivateKeyDescription=Loads the private key value from file
privateKeyFile=Private key file
loadPublicKey=Load public key
loadPublicKeyDescription=Loads the public key value from a file
publicKeyFile=Public key file
signFile=Sign file
signFileDescription=Signs the file to guarantee the authenticity
privateKey=Private Key
verifySignature=Verify signature
verifySignatureDescription=Verifies the signature of the file
publicKey=Public Key
signedObject=Signed Object
datasourceExecuteNativeQuery=Open database native query
functionToExecuteNativeQuery=Function to retrieve data from database using native query
datasourceExecuteNativeQueryUpdate=Open database native query for update
functionToExecuteNativeQueryUpdate=Function to update data from database using native query
textNormalizeFunction=Normalize
textNormalizeDescription=Transforms the text allowing for easier sorting and searching of the text.
nonNormalizedText=Non normalized text
textStartsWithFunction=Text starts with
textStartsWithDescription=Tests if the specified text starts with the specified prefix.
textStarts=Text
prefixStartsWith=Prefix
fieldpath=The field was not found in the table.